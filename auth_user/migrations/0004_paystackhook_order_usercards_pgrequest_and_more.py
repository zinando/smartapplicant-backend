# Generated by Django 5.2 on 2025-06-17 07:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth_user', '0003_customuser_resume_credits_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaystackHook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resp', models.TextField()),
                ('hook_res_id', models.CharField(blank=True, max_length=50, null=True)),
                ('transactionid', models.CharField(max_length=100)),
                ('hookdate', models.DateTimeField(auto_now_add=True)),
                ('hook_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('price', models.FloatField(default=0)),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Total number of resume credits purchased in this order.')),
                ('total', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('txn_ref', models.CharField(blank=True, max_length=200, null=True)),
                ('order_type', models.CharField(choices=[('CREDIT', 'Credit'), ('SUBSCRIPTION', 'Subscription')], default='SUBSCRIPTION', max_length=20)),
                ('payment_method', models.CharField(choices=[('PAYSTACK', 'Paystack'), ('FLUTTERWAVE', 'Flutterwave'), ('STRIPE', 'Stripe'), ('RAVE', 'Rave'), ('PAYPAL', 'Paypal'), ('BANK_TRANSFER', 'Bank Transfer'), ('CASH_ON_DELIVERY', 'Cash on Delivery'), ('WALLET', 'Wallet')], default='PAYSTACK', max_length=20)),
                ('delete_flag', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_token', models.CharField(unique=True)),
                ('card_name', models.CharField(max_length=50)),
                ('exp_month', models.CharField(max_length=7)),
                ('exp_year', models.CharField(max_length=7)),
                ('first6', models.CharField(max_length=7)),
                ('bank', models.CharField(max_length=50)),
                ('is_valid', models.BooleanField(default=True)),
                ('is_disabled', models.BooleanField(default=False)),
                ('rdate', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_cards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PGRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('ref_id', models.CharField(blank=True, max_length=100, null=True)),
                ('txn_type', models.CharField(choices=[('SUBSCRIPTION', 'Subscription'), ('CREDIT', 'Credit'), ('REFUND', 'Refund')], default='SUBSCRIPTION', max_length=20)),
                ('customer_email', models.EmailField(max_length=254)),
                ('hook_res_id', models.CharField(blank=True, max_length=50, null=True)),
                ('res_status', models.CharField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('callback_body', models.JSONField(blank=True, null=True)),
                ('txn_verified', models.BooleanField(default=False)),
                ('hook_check', models.BooleanField(default=False)),
                ('reqhash', models.CharField(blank=True, max_length=50, null=True)),
                ('delete_flag', models.BooleanField(default=False)),
                ('rdate', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='auth_user.order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
                ('user_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='auth_user.usercards')),
            ],
        ),
        migrations.CreateModel(
            name='MatchedResumeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume_data', models.JSONField(help_text='Matched resume data in JSON format.')),
                ('transaction_type', models.CharField(choices=[('CREDIT', 'Credit'), ('SUBSCRIPTION', 'Subscription')], default='SUBSCRIPTION', max_length=20)),
                ('txn_ref', models.CharField(blank=True, help_text='Transaction reference for the matched resume.', max_length=100, null=True)),
                ('matched_date', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matched_resumes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-matched_date'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='auth_user_m_user_id_e79b65_idx'), models.Index(fields=['matched_date'], name='auth_user_m_matched_b96ebb_idx')],
            },
        ),
    ]
